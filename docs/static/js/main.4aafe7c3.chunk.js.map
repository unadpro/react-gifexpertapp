{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","categorias","type","placeholder","value","onChange","target","getGifs","categoria","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","fixed_height","GifGridItem","className","href","rel","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","cat","uuid","ReactDOM","render","document","getElementById"],"mappings":"oNAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACRC,mBAAS,IADD,mBACrCC,EADqC,KACzBC,EADyB,KAoB5C,OACI,sBAAMC,SAbW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAU,OAAKP,GAAL,mBAAmBO,OAC3CN,EAAc,MAQlB,SACI,uBACIO,KAAK,OACLC,YAAc,sBACdC,MAASV,EACTW,SAvBc,SAACR,GACxBF,EAAcE,EAAES,OAAOF,a,+BCPjBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,8DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAKEA,EAAKC,OALP,uBAKZC,EALY,EAKZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GACnB,MAAO,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,aAAaZ,QAXnB,kBAeZM,GAfY,4CAAH,sDCEPO,EAAc,SAAC,GAAmB,EAAlBJ,GAAmB,IAAhBC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAElC,OAEI,sBAAKc,UAAW,6DAAhB,UACI,mBAAIC,KAAMf,EAAKJ,OAAO,SAASoB,IAAI,aAAnC,SAAgD,qBAAKC,IAAKjB,EAAKkB,IAAKR,MACpE,qBAAKI,UAAU,YAAf,SACI,6BAAI,4BAAIJ,YCJXS,EAAU,SAAC,GAAmB,IAAjBrB,EAAgB,EAAhBA,UAAgB,ECFd,SAACA,GAAe,IAAD,EACdf,mBAAS,CAC/BsB,KAAM,GACNe,SAAS,IAH2B,mBACjCC,EADiC,KAC1BC,EAD0B,KAgBxC,OATAC,qBAAU,WACT1B,EAAQC,GAAW0B,MAAM,SAAAC,GACjBH,EAAS,CACDjB,KAAMoB,EACNL,SAAQ,SAGtB,CAACtB,IAEGuB,EDb0BK,CAAa5B,GAAjCa,EAD0B,EAChCN,KAAce,EADkB,EAClBA,QAEtB,OACE,qCACE,oBAAIN,UAAW,oCAAf,SAAoDhB,IAEpD,uBACCsB,GAAW,mBAAGN,UAAW,mCAAd,yBAEZ,qBAAKA,UAAU,YAAf,SACGH,EAAOJ,KAAI,SAACC,GAAD,OACV,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEVnBkB,EAAe,WAAK,MAIO5C,mBAAS,CAAC,cAJjB,mBAItB6C,EAJsB,KAIV9C,EAJU,KAY7B,OACI,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAkBA,IAChC,uBAEA,6BACE8C,EAAWrB,KAAK,SAAAsB,GAAG,OACb,cAAC,EAAD,CACD/B,UAAa+B,GADIC,gB,MCrBjCC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.4aafe7c3.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    const [inputValue, setinputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n       setinputValue(e.target.value);\r\n\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2){\r\n            setCategories(categorias => [inputValue,...categorias]);\r\n            setinputValue('');\r\n        }\r\n\r\n        \r\n       // console.log('Submit Hecho!');\r\n\r\n    }\r\n    return (\r\n        <form onSubmit = {handleSubmit}>\r\n            <input \r\n                type=\"text\"\r\n                placeholder = \"Digite la Categoria\"\r\n                value = {inputValue}\r\n                onChange = {handleInputChange}\r\n\r\n            />\r\n        </form>\r\n        \r\n    \r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired,\r\n  };\r\n","export const getGifs = async (categoria) =>{\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(categoria)}&limit=6&api_key=8xM8glGI28CuFcTurkewTMFxnSKwHyry`\r\n\r\n    const resp = await fetch(url);\r\n\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img =>{\r\n        return {\r\n             id: img.id\r\n            ,title: img.title\r\n            ,url: img.images.fixed_height.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n   // console.log(id,title,url);\r\n    return (\r\n        \r\n        <div className= \"card animate__animated animate__bounce animate__delay-0.8s\">           \r\n            < a href={url} target=\"_blank\" rel=\"noreferrer\"><img src={url} alt={title}/></a>\r\n            <div className=\"container\">\r\n                <h4><b>{title}</b></h4> \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","//import React, { useState, useEffect } from \"react\";\r\nimport React from \"react\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\nimport { GifGridItem } from \"./GifGridItem\";\r\n\r\nexport const GifGrid = ({ categoria }) => {\r\n  const { data: images, loading } = useFetchGifs(categoria);\r\n\r\n  return (\r\n    <>\r\n      <h3 className= \"animate__animated animate__fadeIn\">{categoria}</h3>\r\n\r\n      <hr />\r\n      {loading && <p className= \"animate__animated animate__flash\">Cargando...</p>}\r\n\r\n      <div className=\"card-grid\">\r\n        {images.map((img) => (\r\n          <GifGridItem key={img.id} {...img} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import {useState,useEffect} from 'react';\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (categoria) => {\r\n   const [state, setState] = useState({\r\n       data: [],\r\n       loading: true\r\n       \r\n   });\r\n\r\n   useEffect(() => {\r\n    getGifs(categoria).then( imgs => {      \r\n            setState({ \r\n                    data: imgs, \r\n                    loading:false\r\n                });\r\n    });\r\n   }, [categoria]);\r\n\r\n   return state;\r\n}\r\n\r\n","import React, { useState } from \"react\";\r\n\r\nimport  uuid from 'uuid/dist/v4';\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\n\r\nexport const GifExpertApp = () =>{\r\n\r\n    //const categories = ['One Punch', 'Samurai X', 'Goku']\r\n\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    // const handleAdd = () => {\r\n    //  // setCategories(['Loonie Toons',...categories]);\r\n    //  setCategories(c => [...c,'Space Jam'])\r\n\r\n    // }\r\n\r\n    return (\r\n        <>      \r\n          <h2>GifExpertApp</h2>   \r\n          <AddCategory setCategories  = {setCategories}/> \r\n         <hr />\r\n\r\n         <ol>\r\n         { categories.map( cat => \r\n                (<GifGrid key = {uuid()} \r\n                categoria = {cat} />) )\r\n         \r\n         }\r\n          \r\n\r\n         {/* {\r\n             categories.map(cat =>{\r\n               <li key= { uuid()}>{cat}</li>\r\n             })\r\n         }        */}\r\n         </ol>       \r\n\r\n         \r\n        </>\r\n      );\r\n\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {GifExpertApp} from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}